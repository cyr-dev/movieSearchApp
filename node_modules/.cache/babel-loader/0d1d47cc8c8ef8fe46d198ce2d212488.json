{"ast":null,"code":"import _asyncToGenerator from\"/Users/calebcyr/Documents/GitHub/movieSearchApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/calebcyr/Documents/GitHub/movieSearchApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/calebcyr/Documents/GitHub/movieSearchApp/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import Movie from'./Movie.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Main(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movies=_useState4[0],setMovies=_useState4[1];var handleSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var url,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();url=\"https://api.themoviedb.org/3/search/movie?api_key=f687ad6303cfc5bc6e5badbaaa5735ac&language=en-US&query=\".concat(query,\"&page=1&include_adult=false\");_context.prev=2;_context.next=5;return fetch(url);case 5:response=_context.sent;_context.next=8;return response.json();case 8:data=_context.sent;console.log(data.results);setMovies(data.results);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](2);console.error(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,13]]);}));return function handleSearch(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"main\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Search Movie\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"query\",className:\"label\",children:\"Movie Name\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",placeholder:\"i.e Godzilla\",value:query,onChange:function onChange(e){return setQuery(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",type:\"submit\",children:\"Search\"})]}),/*#__PURE__*/_jsx(\"div\",{children:movies.length>0&&movies.filter(function(movie){return movie.poster_path;}).map(function(movie){return/*#__PURE__*/_jsx(Movie,{path:movie.poster_path,title:movie.title,overview:movie.overview,releaseDate:movie.release_date,stars:movie.vote_average},movie.id);})})]});}","map":{"version":3,"sources":["/Users/calebcyr/Documents/GitHub/movieSearchApp/src/components/Main.js"],"names":["React","useState","Movie","Main","query","setQuery","movies","setMovies","handleSearch","e","preventDefault","url","fetch","response","json","data","console","log","results","error","target","value","length","filter","movie","poster_path","map","title","overview","release_date","vote_average","id"],"mappings":"kZAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,YAAlB,C,wFAGA,cAAe,SAASC,CAAAA,IAAT,EAAgB,CAE7B,cAA0BF,QAAQ,CAAC,EAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eAEA,eAA4BJ,QAAQ,CAAC,EAAD,CAApC,yCAAOK,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,CAAP,wIACjBA,CAAC,CAACC,cAAF,GAEMC,GAHW,mHAGsGP,KAHtG,sEAMQQ,CAAAA,KAAK,CAACD,GAAD,CANb,QAMTE,QANS,qCAOIA,CAAAA,QAAQ,CAACC,IAAT,EAPJ,QAOTC,IAPS,eAQfC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB,EACAX,SAAS,CAACQ,IAAI,CAACG,OAAN,CAAT,CATe,iFAWfF,OAAO,CAACG,KAAR,cAXe,qEAAH,kBAAZX,CAAAA,YAAY,4CAAlB,CAeA,mBACE,cAAM,SAAS,CAAC,MAAhB,wBACE,WAAI,SAAS,CAAC,OAAd,0BADF,cAEE,cACE,QAAQ,CAAEA,YADZ,CAEE,SAAS,CAAC,MAFZ,wBAIE,cACE,OAAO,CAAC,OADV,CAEE,SAAS,CAAC,OAFZ,wBAJF,cAQE,cACE,SAAS,CAAC,OADZ,CAEE,WAAW,CAAC,cAFd,CAGE,KAAK,CAAEJ,KAHT,CAIE,QAAQ,CAAE,kBAACK,CAAD,QAAMJ,CAAAA,QAAQ,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAAd,EAJZ,EARF,cAcE,eACE,SAAS,CAAC,KADZ,CAEE,IAAI,CAAC,QAFP,oBAdF,GAFF,cAqBE,qBACMf,MAAM,CAACgB,MAAP,CAAgB,CAAhB,EACAhB,MAAM,CAACiB,MAAP,CAAc,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAV,EAAnB,EAA0CC,GAA1C,CACE,SAAAF,KAAK,qBAAI,KAAC,KAAD,EAEP,IAAI,CAAEA,KAAK,CAACC,WAFL,CAGP,KAAK,CAAED,KAAK,CAACG,KAHN,CAIP,QAAQ,CAAEH,KAAK,CAACI,QAJT,CAKP,WAAW,CAAEJ,KAAK,CAACK,YALZ,CAMP,KAAK,CAAEL,KAAK,CAACM,YANN,EACFN,KAAK,CAACO,EADJ,CAAJ,EADP,CAFN,EArBF,GADF,CAqCD","sourcesContent":["import React, {useState} from 'react'\nimport Movie from './Movie.js'\n\n\nexport default function Main() {\n\n  const [query, setQuery] = useState('')\n\n  const [movies, setMovies] = useState([])\n\n  const handleSearch = async (e) => {\n      e.preventDefault()\n\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=f687ad6303cfc5bc6e5badbaaa5735ac&language=en-US&query=${query}&page=1&include_adult=false`\n\n      try {\n        const response = await fetch(url)\n        const data = await response.json()\n        console.log(data.results)\n        setMovies(data.results)\n      } catch(err){\n        console.error(err)\n      }\n  }\n\n  return (\n    <main className='main'>\n      <h1 className='title'>Search Movie</h1>\n      <form \n        onSubmit={handleSearch}\n        className='form'\n      >\n        <label \n          htmlFor='query'\n          className='label'\n        >Movie Name</label>\n        <input \n          className='input'\n          placeholder='i.e Godzilla'\n          value={query}\n          onChange={(e)=> setQuery(e.target.value)}\n        />\n        <button\n          className='btn'\n          type='submit'>Search</button>\n      </form>\n\n      <div>\n          { movies.length > 0 && \n            movies.filter(movie => movie.poster_path).map(\n              movie => <Movie \n                key={movie.id}\n                path={movie.poster_path}\n                title={movie.title}\n                overview={movie.overview}\n                releaseDate={movie.release_date}\n                stars={movie.vote_average}\n              />)\n          }\n      </div>\n    </main>\n  )\n}"]},"metadata":{},"sourceType":"module"}